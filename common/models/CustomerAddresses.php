<?php

namespace common\models;

use Yii;

/**
 * This is the model class for table "partnersAddresses".
 *
 * @property string $ID
 * @property string $partnerID
 * @property string $country
 * @property string $region
 * @property string $city
 * @property string $address
 * @property integer $deliveryType
 * @property string $deliveryParam
 * @property integer $paymentType
 * @property string $paymentParam
 * @property integer $primary
 * @property string $cityID
 * @property string $recipientAddress
 * @property string $name
 * @property string $surname
 * @property string $fathername
 * @property integer $default
 * @property string $contactID
 * @property string $deliveryInfo
 * @property string $paymentInfo
 */
class CustomerAddresses extends \yii\db\ActiveRecord
{
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'partnersAddresses';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['ID'], 'required'],
            [['ID', 'partnerID', 'deliveryType', 'paymentType', 'primary', 'default'], 'integer'],
            [['country', 'region', 'city', 'address'], 'string'],
            [['deliveryParam', 'paymentParam', 'cityID', 'recipientAddress', 'name', 'surname', 'fathername', 'contactID', 'deliveryInfo', 'paymentInfo'], 'string', 'max' => 255],
        ];
    }


    public function beforeSave($insert)
    {
        if($this->isNewRecord){
            $this->ID = hexdec(uniqid());
        }

        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    /**
     * Костыли
     * @todo: удалить
     *
     * @param $val
     */
    public function setShippingType($val){
        $this->deliveryType = $val;
    }

    /**
     * Костыли
     * @todo: удалить
     *
     * @param $val
     */
    public function setShippingParam($val){
        $this->deliveryParam = $val;
    }

    /**
     * Костыли
     * @todo: удалить
     *
     * @return string
     */
    public function getShippingType(){
        return $this->deliveryType;
    }

    /**
     * Костыли
     * @todo: удалить
     *
     * @return string
     */
    public function getShippingParam(){
        return $this->deliveryParam;
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'ID' => 'ID',
            'partnerID' => 'Partner ID',
            'country' => 'Country',
            'region' => 'Region',
            'city' => 'City',
            'address' => 'Address',
            'deliveryType' => 'Delivery Type',
            'deliveryParam' => 'Delivery Param',
            'paymentType' => 'Payment Type',
            'paymentParam' => 'Payment Param',
            'primary' => 'Primary',
            'cityID' => 'City ID',
            'recipientAddress' => 'Recipient Address',
            'name' => 'Name',
            'surname' => 'Surname',
            'fathername' => 'Fathername',
            'default' => 'Default',
            'contactID' => 'Contact ID',
            'deliveryInfo' => 'Delivery Info',
            'paymentInfo' => 'Payment Info',
        ];
    }
}
